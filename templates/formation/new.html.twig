{% extends 'base.html.twig' %}
{% block title %}Créer une formation{% endblock %}

{# ⬇️ applique le thème Tailwind/DaisyUI de tes forms #}
{% form_theme form 'forms/tailwind_form_theme.html.twig' %}

{% block body %}
  <div class="max-w-3xl mx-auto p-6 bg-base-100 text-base-content shadow rounded">

    <h1 class="text-2xl font-semibold mb-4">Nouvelle formation</h1>

    {{ form_start(form, { action: path('formation_new'), method: 'POST' }) }}

      {{ form_row(form.titre) }}
      {{ form_row(form.slug) }}
      {{ form_row(form.thematique) }}
      {{ form_row(form.niveau) }}

      {# ---------- MODALITÉS ---------- #}
      <h2 class="mt-6 font-medium">Modalités pédagogiques</h2>
      <div
        id="modalites-collection"
        data-prototype="{{ form_row(form.modalites.vars.prototype)|e('html_attr') }}"
        data-index="{{ form.modalites|length > 0 ? form.modalites|length : 0 }}"
      >
        {% for child in form.modalites %}
          <div class="collection-item mb-2 flex items-center">
            {{ form_widget(child) }}
            <button type="button" class="remove-item ml-2 btn btn-sm btn-ghost text-error">✕</button>
          </div>
        {% endfor %}
      </div>
      <button type="button" id="add-modalite" class="mt-2 btn btn-sm btn-primary">+ Ajouter une modalité</button>
      {% do form.modalites.setRendered %}
      {# ---------- OBJECTIFS ---------- #}
      <h2 class="mt-6 font-medium">Objectifs pédagogiques</h2>
      <div
        id="objectifs-collection"
        data-prototype="{{ form_row(form.objectifs.vars.prototype)|e('html_attr') }}"
        data-index="{{ form.objectifs|length > 0 ? form.objectifs|length : 0 }}"
      >
        {% for child in form.objectifs %}
          <div class="collection-item mb-2 flex items-center">
            {{ form_widget(child) }}
            <button type="button" class="remove-item ml-2 btn btn-sm btn-ghost text-error">✕</button>
          </div>
        {% endfor %}
      </div>
      <button type="button" id="add-objectif" class="mt-2 btn btn-sm btn-primary">+ Ajouter un objectif</button>
      {% do form.objectifs.setRendered %}
      {{ form_row(form.prerequis) }}

      {{ form_row(form.duree) }}
      {{ form_row(form.tarif) }}
      {{ form_row(form.description) }}

      <div class="mt-6 flex justify-end">
        <button type="submit" class="btn btn-success">Enregistrer</button>
      </div>

    {{ form_end(form) }}
  </div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
  (function(){
    function decodeHtml(s){
      var t=document.createElement('textarea'); t.innerHTML=s; return t.value;
    }
    function hookCollection(rootId, addBtnId){
      var container=document.getElementById(rootId);
      if(!container) return;

      var proto = container.dataset.prototype || '';
      if(!proto){
        console.warn('['+rootId+'] data-prototype manquant');
        return;
      }
      if(proto.indexOf('&lt;')!==-1) proto = decodeHtml(proto);

      if(!container.dataset.index){
        container.dataset.index = String(container.querySelectorAll('.collection-item').length || 0);
      }

      function add(){
        var index = parseInt(container.dataset.index || '0', 10);
        var html = proto
          .replace(/__name__label__/g, 'Élément '+(index+1))
          .replace(/__name__/g, index);

        container.insertAdjacentHTML('beforeend',
          '<div class="collection-item mb-2 flex items-center">'
            + html +
            '<button type="button" class="remove-item ml-2 btn btn-sm btn-ghost text-error">✕</button>'
          + '</div>'
        );
        container.dataset.index = String(index+1);
      }

      var addBtn = document.getElementById(addBtnId);
      if(addBtn) addBtn.addEventListener('click', add);
    }

    function init(){
      hookCollection('modalites-collection','add-modalite');
      hookCollection('objectifs-collection','add-objectif');

      document.body.addEventListener('click', function(e){
        var btn = e.target.closest('.remove-item');
        if(btn){
          var item = btn.closest('.collection-item');
          if(item) item.remove();
        }
      });
    }

    if(document.readyState === 'loading'){
      document.addEventListener('DOMContentLoaded', init);
    } else {
      init();
    }
  })();
  </script>
{% endblock %}

